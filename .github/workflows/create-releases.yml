name: Create all Releases

on:
  push:
    tags:
      - "chrome-v*.*.*"
      - "firefox-v*.*.*"
      - "edge-v*.*.*"
      #- "safari-v*.*.*"

permissions:
    contents: write

jobs:
    setup-and-build:
        runs-on: ubuntu-latest
        steps:
            - name: Define prefix
              run: echo "AWSF=awsf" >> $GITHUB_ENV

            - name: Setup repo
              uses: actions/checkout@v4

            - name: Define file name with version
              run: |
                TAG="${GITHUB_REF_NAME}"

                BROWSER=${TAG%%-v*} # Extract substring before '-v'
                TAG_VERSION=${TAG##*-v} # Extract substring after '-v'
                PURE_VERSION=${TAG_VERSION%%-*} # Extract substring before any additional '-' (like '-alpha')
                MANIFEST_VERSION=$(grep -oP '"version":\s*"\K[0-9.]+' manifest/template-manifest.json) # Get version from manifest

                PRERELEASE=$([ "$TAG_VERSION" != "$MANIFEST_VERSION" ] && echo "true" || echo "false")

                BROWSER_VERSION_NAME="${{ env.AWSF }}-$BROWSER-v$MANIFEST_VERSION"

                echo "TRIGGERING_TAG=$TAG" >> $GITHUB_ENV
                echo "BROWSER=$BROWSER" >> $GITHUB_ENV
                echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
                echo "MANIFEST_VERSION=$MANIFEST_VERSION" >> $GITHUB_ENV
                echo "BROWSER_VERSION_NAME=$BROWSER_VERSION_NAME" >> $GITHUB_ENV
                echo "ZIP_NAME=$BROWSER_VERSION_NAME.zip" >> $GITHUB_ENV
                echo "RELEASE_NOTES=./docs/Release Notes/v$PURE_VERSION.md" >> $GITHUB_ENV
                echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV

            - name: Setup Deno
              uses: denoland/setup-deno@v2
              with:
                  deno-version: v2.x

            - name: Make Manifest
              run: |
                deno task dev-${{ env.BROWSER }}
                ls manifest.json # if the file does not exist, fails the script

            - name: Zip ${{ env.BROWSER }} extension
              shell: bash
              run: zip -r ${{ env.ZIP_NAME }} action assets background salesforce *.js LICENSE* README.md manifest.json -x "*/README.md"

            - name: Create ${{ env.BROWSER }} Release
              uses: softprops/action-gh-release@v2
              with:
                name: ${{ env.BROWSER_VERSION_NAME }}
                body: See release notes at ${{ env.RELEASE_NOTES }}.
                body_path: ${{ env.RELEASE_NOTES }}
                generate_release_notes: true
                make_latest: true
                tag_name: ${{ env.TRIGGERING_TAG }}
                prerelease: ${{ env.PRERELEASE }}
                files: ${{ env.ZIP_NAME }}
