name: Format, Lint and add changes on PR

on:
    pull_request:
        types:
            - opened
            - synchronize
            - reopened
            - ready_for_review
        branches:
            - main

permissions:
    contents: write

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Setup repo
              uses: actions/checkout@v4

            - name: Setup Deno
              uses: denoland/setup-deno@v2
              with:
                  deno-version: v2.x

            - name: Switch to branch
              run: |
                git fetch origin "${{ github.head_ref }}" 
                git switch "${{ github.head_ref }}"

            - name: Run linter and comment on failure
              run: |
                output=$(deno task lint 2>&1 || true)
                if [ -n "$output" ]; then
                  PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
                  echo "$PR_NUMBER"
                  COMMENT_BODY="## Linter Failed:\n\n\`\`\`$(echo "$output")\`\`\`"
                  curl -H "Authorization: token ${{ github.token }}" \
                        -X POST \
                        -d '{"body": "$COMMENT_BODY"}' \
                        "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
                  exit 2
                fi

            - name: Verify formatting
              run: deno task fmt

            - name: Ensure Changes Exist
              run: |
                  if git diff --exit-code; then
                    echo "No changes to commit, exiting."
                    exit 0
                  fi

            - name: Set up Git user
              run: |
                  git config user.name "github-actions"
                  git config user.email "github-actions@github.com"

            - name: Push fmt changes
              run: |
                  git commit -am "deno formatting"
                  git push https://x-access-token:${{ github.token }}@github.com/${{ github.repository }} "${{ github.head_ref }}"
